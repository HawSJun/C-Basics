#include <stdlib.h>
#include <stdio.h>

int main()
{
	int* pInt;

	// const
	const int cint = 100;		// volatile : 휘발성, 레지스터를 이용해서 하는 연산 방식을 사용하지 마라

	// 상수화 : 값이 바뀔 수 없는 상태
	// r-value : 상수
	// l-value : 변수

	//cint = 100;		
	// 문법적으로 안됨, c/c++ 문법이 const를 붙이면 상수로 취급하기 때문에
	// 앞으로 그걸 수정 하려는 걸 문법적으로 검사를 해서 막아 주겠다는 거지 정말 이 안에 있는 값을
	// 진짜 상수들 처럼 바뀔수 없다는 개념은 아님!
	// 변수라는 공간 자체가 상수가 된다기 보다는 상수로써 컴파일러에서 문법적으로 최대한 지원을 하겠다.

	pInt = (int*)&cint;
	// cpu가 연산할 때 중간 연산 저장으로 빠르게 끌어다 사용하는 레지스터 메모리가 있는데
	// 원래 cint에 들어있는 상수로 인식되던 100을 레지스터가 기억하고 있어서 실제 값은 300인데 출력결과는 100이 나옴
	// 컴파일러가 최적화를 해서 레지스터가 기억하고 있던 값을 그대로 출력

	*pInt = 300;
	printf("cint 출력 : %d\n", cint);

	return 0;
}

